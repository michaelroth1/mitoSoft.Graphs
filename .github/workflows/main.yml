name: Build

on:
  push:
    branches: master
    tags: '**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Publish NuGet
        uses: rohith/publish-nuget@v2.4.0
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: mitoSoft.Graphs/mitoSoft.Graphs.csproj
          #NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: mitoSoft.Graphs
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          #VERSION_FILE_PATH: # optional
          # Regex pattern to extract version info in a capturing group
          #VERSION_REGEX: # optional, default is <Version>(.*)<\/Version>
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          #VERSION_STATIC: # optional
          # Flag to toggle git tagging, enabled by default
          #TAG_COMMIT: # optional, default is true
          # Format of the git tag, [*] gets replaced with actual version
          #TAG_FORMAT: # optional, default is v*
          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # optional
          # API key to authenticate with NuGet symbols server, defaults to NUGET_KEY
          #NUGET_SYMBOL_KEY: # optional
          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          #NUGET_SOURCE: # optional, default is https://api.nuget.org
          # NuGet server uri hosting the symbols, defaults to https://api.nuget.org
          #NUGET_SYMBOL_SOURCE: # optional, default is https://api.nuget.org
          # Flag to toggle pushing symbols along with nuget package to the server, enabled by default
          #INCLUDE_SYMBOLS: # optional, default is true
